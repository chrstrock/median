### GET request to example server
@host= http://localhost
@port = 3000
GET {{host}}:{{port}}/articles
###
GET {{host}}:{{port}}/articles/drafts

### GET article with ID of 1
GET {{host}}:{{port}}/articles/2

###
POST {{host}}:{{port}}/articles
Content-Type: application/json
Accept: application/json

{
   "title": "New Article",
   "description": "This is a new article",
    "body": "This is the body of the article",
    "published" : true
}

### POST with short title
POST {{host}}:{{port}}/articles
Content-Type: application/json
Accept: application/json

{
   "title": "New",
   "description": "This is a new article",
    "body": "This is the body of the article",
    "published" : true
}

###
PATCH {{host}}:{{port}}/articles/1
Content-Type: application/json
Accept: application/json

{
   "title": "Temp",
   "description": "This is an updated article",
    "body": "This is the body of the updated article",
    "published" : true
}

###
DELETE {{host}}:{{port}}/articles/4

###
GET {{host}}:{{port}}/articles/2532523

###Exception Handling
POST {{host}}:{{port}}/articles
Content-Type: application/json
Accept: application/json

{
  "title": "Letâ€™s build a REST API with NestJS and Prisma.",
  "description": "NestJS Series announcement.",
  "body": "NestJS is one of the hottest Node.js frameworks around. In this series, you will learn how to build a backend REST API with NestJS, Prisma, PostgreSQL and Swagger.",
  "published": true
}

### GET user
GET {{host}}:{{port}}/users/1

### POST auth/login
POST {{host}}:{{port}}/auth/login
Content-Type: application/json
Accept: application/json

{
  "email": "sabin@adams.com",
  "password": "password-sabin"
}